name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Build Docker Images
      run: |
        docker-compose build

  unit-tests:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run Unit Tests
      run: |
        make unit-tests

  integration-tests:
    needs: unit-tests
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Build and Start Services
      run: |
        docker-compose up -d

    - name: Run Integration Tests
      run: |
        make integration-tests

    - name: Tear Down Services
      if: always()
      run: |
        docker-compose down

  e2e-tests:
    needs: integration-tests
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Run End-to-End Tests
      run: |
        make e2e-tests

  # deploy-preview:
  #   needs: e2e-tests
  #   runs-on: ubuntu-latest

  #   steps:
  #   - name: Checkout Code
  #     uses: actions/checkout@v3

  #   - name: Configure AWS CLI
  #     uses: aws-actions/configure-aws-credentials@v2
  #     with:
  #       aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #       aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #       aws-region: us-east-1

  #   - name: Deploy to Lambda
  #     run: |
  #       zip -r function.zip .
  #       aws lambda update-function-code --function-name RobotCleaningService --zip-file fileb://function.zip

  code-coverage:
    needs: unit-tests
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run Coverage Report
      run: |
        coverage run -m unittest discover -s tests
        coverage report
        coverage xml

    - name: Check Code Coverage
      uses: actions/github-script@v6
      with:
        script: |
          const { execSync } = require('child_process');
          const output = execSync('coverage report').toString();
          console.log(output);
